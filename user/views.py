import string
from user.models import OtpVerificationData, User

import random

#--------------------- USER FUNCTIONS -------------------------------------

class UserFunctions:
    def generate_unique_user_id(block):
        """
        Generates unique id for users
        :param block: block of the user
        :returns : uniqueID
        """
        block_prefix = block.block_prefix
        dist_prefix = block.district.dist_prefix
        rand_str = ''.join(random.choice(string.ascii_uppercase + string.digits) for i in range(2))
        rand_num = str(random.randint(10000, 99999))

        return dist_prefix + block_prefix + rand_str + rand_num
    
    def check_mobile_in_OTPmodel(mobile):
        """
        to check if a number is in OTP model
        :param mobile: mobile to be checked
        :returns: queryset
        """
        queryset = OtpVerificationData.objects.filter(mobile=mobile)
        return queryset
    
    def get_count(mobile):
        """
        To get counting of otp generated by a number
        :param mobile: mobile number stored in model
        :returns: returns count
        """
        object = OtpVerificationData.objects.get(mobile=mobile)
        c= object.count
        return c
    
    def update_otp(mobile, new_otp, count):
        """
        To update OTP in the OTP model
        :param mobile: mobile of the queryset
        :param new_otp: new OTP
        :return:NO return value
        """
        queryset = OtpVerificationData.objects.get(mobile=mobile)
        queryset.otp = new_otp
        # queryset.count = count +1
        queryset.save()

    def check_mobile_in_UserModel(mobile):
        """
        to check if a number is in User model
        :param mobile: mobile to be checked
        :returns: queryset
        """
        queryset = User.objects.filter(mobile=mobile)
        return queryset